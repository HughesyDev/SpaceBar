TODO:
1. check Docker is actually working with what exists already.
2. Refactor repository architecture (check Hitchhiker's Py repo guide)
    ./tests
    ./docs
3. Set up automated inner-dev-cycle stuff (code linting on-save etc.)
4. Set up automated testing on-save etc.

?. Refactor Drinks, People, then Round (or Orders), remember all objs to have a __str__ and __repr__ (what other special methods?)
?. Set up devcontainer for app

potentially:
class Round extends dict, 
 - inherits its properties and methods
 - iterable now and key:val by design
 - Pytest


loop until a particular vertical slice / MVP is completed.

class-hierarchy diagrams / UML to understand how the objects interact.


# Upload Prezi slide online ?

could have (extensions / constraints):

    - hot drinks AND cold drinks
    - alcoholic or non-alcoholic
    - also have additional properties: milk, sugar, complementary biscuit?
    - datetime that each drink order / round is created?

# TODO: Round: set drink_pref as default drink choice?

# TODO: Round: add receipt output

# localhost equiv for Docker Toolbox:
# 192.168.99.100:8080

CORE GOALS:

TODO: Select preferences by using ID of name / drink
TODO: Create Round, use ID for selecting person/drink. Default set as their favourite.
TODO: For round
TODO: Test for drink / person validation
TODO: Test that preferences are added correctly
TODO: Making a round (isInstance?)
TODO: Assign a brewer (in my case, "bill-payer") to a Round
TODO: Printing a Roun
TODO: Do clear() after every command? Make it look cleaner/run without scrolling down
TODO: 8 Are drink preferences persisted?
TODO: 9  Are round information persisted?

'''DONE: Is there a separate python module / package for the app's data persistence?	YES	NO'''
'''TODO: Can the app read people drinks and preferences from a mysql database?	YES	NO	'''
'''TODO: Can the app save people drinks and preferences to a mysql database?	YES	NO	'''
'''TODO: Does the people table include first and last names, and drink preference?	YES	NO	'''
'''TODO: Does the drink table hold extra drink information such as temperature, milk percentage and quantity?	YES	NO'''	
'''TODO: Does your app prevent duplicate people or drinks being entered into the database?	YES	NO'''

# What you did
# What challenges you faced.
# Prezi for presenting it - create small demo presentation / or Google Slides
# DEMO IS A WEEK ON TUESDAY to people from other cohort, Infinity Works people.

# REMEMBER: each bit of work in feature branch is its own commit, when finished, MERGE.

 # new person = provide name, then they're created on the db, 
 # then pull the id down as the name of the instance?
 # Person will have fave attrib, but that's set separately from db

# How menu will work with DBs
# DB auto loads into data structs
# When person/drink is added, connect to db, add, then pull new db info into data structs.

# Fetch drink data into data dump
# loop through data dump creating instances of drink classes out of each one

'''
 - Testing Suite
 - Use more OOP
 - Generate Unique ID for their order
 - Print a receipt.
'''

STRETCH GOALS

Separate Testing logic to new module

Make Python --m Unittest.py or something work. Test Suit

EXTRA FEATURES
- Leaderboards
- Brew stats: most popular brew, brews per round etc.
- A Slack bot